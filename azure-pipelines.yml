trigger:
  branches:
    include:
      - master
      - refs/tags/*
      
variables:
  majorMinorPatch: 1.0.0
  revision: $[counter(variables['majorMinorPatch'], 0)]
  system.debug: "true"
  githubOrganization: 'HoeflingSoftware'
  githubRepo: 'Dnn.KeyMaster'

jobs:    
- job: Build
  displayName: Build and Create Installer
  pool:
    name: Hosted VS2017
    demands:
    - MSBuild

  steps:
  - powershell: '$(System.DefaultWorkingDirectory)\build.ps1 -Target Package -ScriptArgs "-package_version=$env:VERSION"; exit $LASTEXITCODE'
    env:
      VERSION: "$(majorMinorPatch).$(revision)"
    displayName: 'Cake Build - Clean, NuGet, Build and Package'

  - task: CopyFiles@2
    displayName: 'Copy Files to Artifacts Staging Directory'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/*_install.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts: drop'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'

# - job: AutomationTest900
#   dependsOn: Build
#   displayName: Test DNN 9.0.0
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-900-$(Build.BuildId)'
#       resourceGroup: 'kmd-900-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.0.0/DNN_Platform_9.0.0.1002_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest901
#   dependsOn: Build
#   displayName: Test DNN 9.0.1
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-901-$(Build.BuildId)'
#       resourceGroup: 'kmd-901-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.0.1/DNN_Platform_9.0.1.142_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest902
#   dependsOn: Build
#   displayName: Test DNN 9.0.2
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-902-$(Build.BuildId)'
#       resourceGroup: 'kmd-902-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.0.2/DNN_Platform_9.0.2_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest910
#   dependsOn: Build
#   displayName: Test DNN 9.1.0
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-910-$(Build.BuildId)'
#       resourceGroup: 'kmd-910-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.1.0/DNN_Platform_9.1.0.367_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest911
#   dependsOn: Build
#   displayName: Test DNN 9.1.1
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-911-$(Build.BuildId)'
#       resourceGroup: 'kmd-911-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.1.1/DNN_Platform_9.1.1.129-232_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest920
#   dependsOn: Build
#   displayName: Test DNN 9.2.0
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-920-$(Build.BuildId)'
#       resourceGroup: 'kmd-920-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.2.0/DNN_Platform_9.2.0.366-777_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

# - job: AutomationTest921
#   dependsOn: Build
#   displayName: Test DNN 9.2.1
#   pool:
#     name: "Hosted VS2017"
#     demands: DotNetFramework
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

#   steps:
#   - template: azure-pipelines-test-dnn.yml
#     parameters: 
#       name: 'kmd-921-$(Build.BuildId)'
#       resourceGroup: 'kmd-921-$(Build.BuildId)-rg'
#       serviceConnection: '$(ServiceConnection)'
#       hostPassword: '$(HostPassword)'
#       platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.2.1/DNN_Platform_9.2.1.533-298_Install.zip'
#       subscriptionId: '$(SubscriptionId)'

- job: AutomationTest922
  dependsOn: Build
  displayName: Test DNN 9.2.2
  pool:
    name: "Hosted VS2017"
    demands: DotNetFramework
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  steps:
  - template: azure-pipelines-test-dnn.yml
    parameters: 
      name: 'kmd-922-$(Build.BuildId)'
      resourceGroup: 'kmd-922-$(Build.BuildId)-rg'
      serviceConnection: '$(ServiceConnection)'
      hostPassword: '$(HostPassword)'
      platformInstaller: 'https://github.com/dnnsoftware/Dnn.Platform/releases/download/v9.2.2/DNN_Platform_9.2.2.178_Install.zip'
      subscriptionId: '$(SubscriptionId)'

- job: Release
  dependsOn: 
  - Build
  # - AutomationTest900
  # - AutomationTest901
  # - AutomationTest902
  # - AutomationTest910
  # - AutomationTest911
  # - AutomationTest920
  # - AutomationTest921
  - AutomationTest922
  displayName: Release
  pool:
    name: "Hosted VS2017"
  condition: and(succeeded(), startswith(variables['Build.SourceBranch'], 'refs/tags'))

  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: drop
      downloadPath: $(System.DefaultWorkingDirectory) 

  - task: Npm@1
    displayName: 'npm install github-release-notes'
    inputs:
      command: custom
      verbose: false
      customCommand: 'install github-release-notes -g'

  - powershell: 'gren release --username=$(githubOrganization) --token=$env:TOKEN --repo=$(githubRepo); exit $LASTEXITCODE'
    env:
      TOKEN: $(githubToken)
    displayName: 'Create GitHub Release'

  - powershell: 'gren changelog --override --username=$(githubOrganization) --token=$env:TOKEN --repo=$(githubRepo); exit $LASTEXITCODE'
    env:
      TOKEN: $(githubToken)
    displayName: 'Update CHANGELOG.md'

  - task: hoefling-software.GitHubTasks.GitHubPublishReleaseArtifact.GitHubPublishReleaseArtifact@1
    displayName: Publish GitHub Release Artifact
    inputs:
      githubRepo: $(githubRepo)
      githubOrganization: $(githubOrganization)
      githubToken: $(githubToken)
      artifact: '$(System.DefaultWorkingDirectory)/*_install.zip'
      artifactDisplayName: '$(githubRepo)_$(majorMinorPatch).$(revision)_install.zip'