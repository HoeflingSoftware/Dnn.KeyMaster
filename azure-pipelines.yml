trigger:
  branches:
    include:
      - master
      - refs/tags/*
      
variables:
  majorMinorPatch: 1.0.0
  revision: $[counter(variables['majorMinorPatch'], 0)]
  system.debug: "true"
  githubOrganization: 'HoeflingSoftware'
  githubRepo: 'Dnn.KeyMaster'

jobs:    
- job: Build
  displayName: Build and Create Installer
  pool:
    name: Hosted VS2017
    demands:
    - MSBuild

  steps:
  - powershell: '$(System.DefaultWorkingDirectory)\build.ps1 -Target Package -ScriptArgs "-package_version=$env:VERSION"; exit $LASTEXITCODE'
    env:
      VERSION: "$(majorMinorPatch).$(revision)"
    displayName: 'Cake Build - Clean, NuGet, Build and Package'

  - task: CopyFiles@2
    displayName: 'Copy Files to Artifacts Staging Directory'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/*_install.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts: drop'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'

- job: Release
  dependsOn: Build
  displayName: Release
  pool:
    name: "Hosted VS2017"
  condition: and(succeeded(), startswith(variables['Build.SourceBranch'], 'refs/tags'))

  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: drop
      downloadPath: $(System.DefaultWorkingDirectory) 

  - task: Npm@1
    displayName: 'npm install github-release-notes'
    inputs:
      command: custom
      verbose: false
      customCommand: 'install github-release-notes -g'

  - powershell: 'gren release --username=$(githubOrganization) --token=$env:TOKEN --repo=$(githubRepo); exit $LASTEXITCODE'
    env:
      TOKEN: $(githubToken)
    displayName: 'Create GitHub Release'

  - powershell: 'gren changelog --override --username=$(githubOrganization) --token=$env:TOKEN --repo=$(githubRepo); exit $LASTEXITCODE'
    env:
      TOKEN: $(githubToken)
    displayName: 'Update CHANGELOG.md'

  - task: hoefling-software.GitHubTasks.GitHubPublishReleaseArtifact.GitHubPublishReleaseArtifact@1
    displayName: Publish GitHub Release Artifact
    inputs:
      githubRepo: $(githubRepo)
      githubOrganization: $(githubOrganization)
      githubToken: $(githubToken)
      artifact: '$(System.DefaultWorkingDirectory)/*_install.zip'
      artifactDisplayName: '$(githubRepo)_$(majorMinorPatch).$(revision)_install.zip'